function o(e,s,a,t){window.enmity.clyde.sendReply(e,s,a,t)}var f;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(f||(f={}));var h;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(h||(h={}));var i;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(i||(i={}));var l;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(l||(l={}));var u;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number"})(u||(u={}));var v;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(v||(v={}));const c="enmity";function B(e){window.enmity.plugins.registerPlugin(e)}async function I(e){return new Promise((s,a)=>{window.enmity.storage.getItem(e).then(t=>{s(t)}).catch(t=>{a(t)})})}async function N(e,s){return new Promise((a,t)=>{window.enmity.storage.setItem(e,s).then(n=>{a(n)}).catch(n=>{t(n)})})}async function w(e){return new Promise((s,a)=>{window.enmity.storage.removeItem(e).then(()=>{s()}).catch(t=>{a(t)})})}const m={name:"Tags",commands:[],onStart(){const e={id:"tag-command",applicationId:c,name:"tag",displayName:"tag",description:"Sends a tag.",displayDescription:"Sends a tag.",type:h.Chat,inputType:i.BuiltInText,options:[{name:"name",displayName:"name",description:"Name of the tag to send",displayDescription:"Name of the tag to send",type:u.String,required:!0}],execute:async function(t,n){const r=t[0].value,g=n.channel;I(`tag.${r}`).then(d=>{if(d==null)return o(g.id,`Tag \`${r}\` not found.`),{};o(g.id,`${d}`)})}},s={id:"tagadd-command",applicationId:c,name:"tagadd",displayName:"tagadd",description:"Adds a tag.",displayDescription:"Adds a tag.",type:h.Chat,inputType:i.BuiltInText,options:[{name:"name",displayName:"name",description:"Name of the tag to add",displayDescription:"Name of the tag to add",type:u.String,required:!0},{name:"content",displayName:"content",description:"Content for the tag to add",displayDescription:"Content for the tag to add",type:u.String,required:!0}],execute:async function(t,n){const r=t[0].value,g=t[1].value,d=n.channel;N(`tag.${r}`,g).then(()=>(o(d.id,`Tag \`${r}\` added.`),{}))}},a={id:"tagremove-command",applicationId:c,name:"tagremove",displayName:"tagremove",description:"Removes a tag.",displayDescription:"Removes a tag.",type:h.Chat,inputType:i.BuiltInText,options:[{name:"name",displayName:"name",description:"Name for the tag to remove",displayDescription:"Name for the tag to remove",type:u.String,required:!0}],execute:async function(t,n){const r=t[0].value,g=n.channel;w(`tag.${r}`).then(d=>(o(g.id,`Tag \`${r}\` removed.`),{}))}};this.commands.push(e),this.commands.push(s),this.commands.push(a)},onStop(){this.commands=[]}};B(m);
